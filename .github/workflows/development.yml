name: development

on: [ push, pull_request ]

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  GO_VERSION: 1.22

jobs:
  maintenance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - uses: golangci/golangci-lint-action@v6
        name: install golangci
        with:
          version: latest
          args: --help

      - name: lint
        run: make lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: download dependencies
        run: go mod download

      - name: build kube2kafka
        run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: download dependencies
        run: go mod download

      - name: install ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo

      - name: start kafka-native container
        run: make kafka

      - name: test
        run: make test

      - name: stop kafka-native container
        run: make kafka-stop

      - name: prepare code coverage artifact name
        run: |
          echo "ARTIFACT_NAME=${{ env.GO_VERSION }}-${{ github.sha }}" >> $GITHUB_ENV

      - name: upload code coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: sonarqube-${{ env.ARTIFACT_NAME }}
          path: coverage.out
          retention-days: 7

  sonarqube:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: download code coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: sonarqube-${{ env.ARTIFACT_NAME }}

      - name: scan with SonarQube
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
